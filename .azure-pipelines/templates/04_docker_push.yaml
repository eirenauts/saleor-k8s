# @format
---
stages:
  - stage: docker_push
    displayName: Push images
    condition: and(eq(variables['Build.SourceBranch'], 'refs/heads/master'), succeeded())
    dependsOn: []
    jobs:
      - job: push_saleor_core
        displayName: Push saleor-core image
        condition: always()
        steps:
          - template: ../init_step.yaml

          - task: Bash@3
            displayName: Push saleor-core image
            inputs:
              targetType: "inline"
              workingDirectory: "$(Build.Repository.LocalPath)"
              failOnStderr: false
              noProfile: true
              noRc: true
              script: |
                make build_saleor_core
                make push_saleor_core
            env:
              REGISTRY_TOKEN: $(registryToken)
              FORCE_PUSH_IMAGES: $(forcePush)

      - job: push_saleor_core_dev
        displayName: Push saleor-core-dev image
        condition: always()
        steps:
          - template: ../init_step.yaml

          - task: Bash@3
            displayName: Push saleor-core-dev image
            inputs:
              targetType: "inline"
              workingDirectory: "$(Build.Repository.LocalPath)"
              failOnStderr: false
              noProfile: true
              noRc: true
              script: |
                make build_saleor_core_dev
                make push_saleor_core_dev
            env:
              REGISTRY_TOKEN: $(registryToken)
              FORCE_PUSH_IMAGES: $(forcePush)

      - job: push_saleor_dashboard
        displayName: Push saleor-dashboard image
        condition: always()
        steps:
          - template: ../init_step.yaml

          - task: Bash@3
            displayName: Push saleor-dashboard image
            inputs:
              targetType: "inline"
              workingDirectory: "$(Build.Repository.LocalPath)"
              failOnStderr: false
              noProfile: true
              noRc: true
              script: |
                make build_saleor_dashboard
                make push_saleor_dashboard
            env:
              REGISTRY_TOKEN: $(registryToken)
              FORCE_PUSH_IMAGES: $(forcePush)

      - job: push_saleor_storefront
        displayName: Push saleor-storefront image
        condition: always()
        steps:
          - template: ../init_step.yaml

          - task: Bash@3
            displayName: Push saleor-storefront image
            inputs:
              targetType: "inline"
              workingDirectory: "$(Build.Repository.LocalPath)"
              failOnStderr: false
              noProfile: true
              noRc: true
              script: |
                make build_saleor_storefront
                make push_saleor_storefront
            env:
              REGISTRY_TOKEN: $(registryToken)
              FORCE_PUSH_IMAGES: $(forcePush)
