# @format
---
stages:
  - stage: helm_push
    displayName: Push saleor helm charts
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    dependsOn: []
    jobs:
#      - deployment: helm_push_approval
#        displayName: Approval for push to registry
#        dependsOn: []
#        continueOnError: false
#        timeoutInMinutes: 1296000
#        cancelTimeoutInMinutes: 1296000
#        environment: "Push saleor helm charts"
#        strategy:
#          runOnce:
#            deploy:
#              steps:
#                - script: echo "approval required"

      - job: push_saleor_helm_charts
        displayName: Push saleor helm charts to github pages
#        dependsOn: [helm_push_approval]
        dependsOn: []
        condition: succeeded()
        steps:
          - template: ../init_step.yaml

          - task: Bash@3
            displayName: Configure git
            inputs:
              targetType: "inline"
              workingDirectory: "$(Build.Repository.LocalPath)"
              failOnStderr: false
              noProfile: true
              noRc: true
              script: |
                git config --global user.name "eirenauts-infra"
                git config --global user.email "eirenauts-infra@users.noreply.github.com"

          - task: Bash@3
            displayName: Push saleor helm charts
            inputs:
              targetType: "inline"
              workingDirectory: "$(Build.Repository.LocalPath)"
              failOnStderr: false
              noProfile: true
              noRc: true
              script: |
                make push_updated_charts
            env:
              CR_TOKEN: $(crToken)

