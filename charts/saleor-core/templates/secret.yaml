{{- if not .Values.existingSecret }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "saleor-core.fullname" . }}
  labels:
    {{- include "saleor-core.labels" . | nindent 4 }}
type: Opaque
data:
{{- if not (empty .Values.externalServices.email.smtpSettings.password) }}
  EMAIL_PASSWORD: {{ .Values.externalServices.email.smtpSettings.password | b64enc | quote }}
{{- end }}


{{- if and .Values.jobs.init.currencyUpdates.enabled (not (empty .Values.jobs.init.currencyUpdates.openExchangesApiKey)) }}
  OPENEXCHANGERATES_API_KEY: {{ .Values.jobs.init.currencyUpdates.openExchangesApiKey | b64enc | quote }}
{{- end }}


{{- if not (empty .Values.recapthcaPrivateKey) }}
  RECAPTCHA_PRIVATE_KEY: {{ .Values.recapthcaPrivateKey | b64enc | quote }}
{{- end }}


{{- if not (empty .Values.secretKey) }}
  SECRET_KEY: {{ .Values.secretKey | b64enc | quote }}
{{- else }}
{{- $allowed := "abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*(-_=+)" }}
{{- $randomWord := dict "characters" (list) }}
{{- range $i := ($allowed | len | until) }}
{{- $randomChar :=  trunc 1 ((trunc (1 | randNumeric | int | add1 | int) ($allowed | shuffle)) | shuffle) }}
{{- $_ := set $randomWord "characters" (append $randomWord.characters ($randomChar | join "")) }}
{{- end }}
{{- $secretKey := $randomWord.characters | join "" }}
  SECRET_KEY: {{ $secretKey | b64enc | quote }}
{{- end }}


{{- if and .Values.jobs.init.plugins.enabled (and .Values.externalServices.vatLayer.enabled (not (empty .Values.externalServices.vatLayer.vatLayerAccessKey))) }}
  VATLAYER_API_KEY: {{ .Values.externalServices.vatLayer.vatLayerAccessKey | b64enc | quote }}
{{- end }}


{{- if and .Values.jobs.init.plugins.enabled (and .Values.externalServices.braintree.enabled (not (empty .Values.externalServices.braintree.privateKey))) }}
  BRAINTREE_PRIVATE_KEY: {{ .Values.externalServices.braintree.privateKey | quote }}
{{- end }}


{{- if and .Values.externalServices.cloudStorage.enabled .Values.externalServices.cloudStorage.s3.enabled -}}
{{- if not (empty .Values.externalServices.cloudStorage.s3.keyId) -}}
  AWS_ACCESS_KEY_ID: {{- .Values.externalServices.cloudStorage.s3.keyId | b64enc | quote }}
{{- end }}
{{- if not (empty .Values.externalServices.cloudStorage.s3.keySecret) -}}
  AWS_SECRET_ACCESS_KEY: {{- .Values.externalServices.cloudStorage.s3.keySecret | b64enc | quote }}
{{- end }}
{{- end }}


{{- if .Values.externalServices.redis.password -}}
  REDIS_PASSWORD: {{ .Values.externalServices.redis.password | b64enc | quote }}
{{- end }}


{{- if and .Values.externalServices.postgresql.password (not (empty .Values.externalServices.postgresql.password)) -}}
  POSTGRESQL_PASSWORD: {{ .Values.externalServices.postgresql.password | b64enc | quote }}
{{- end }}


{{- if and .Values.externalServices.sentry.dsn (not (empty .Values.externalServices.sentry.dsn)) -}}
  SENTRY_DSN: {{ .Values.externalServices.sentry.dsn | b64enc | quote }}
{{- end }}


{{- if or .Values.backup.database.enabled .Values.backup.media.enabled }}
{{- if .Values.backup.restic.password }}
  RESTIC_PASSWORD: {{ .Values.backup.restic.password | b64enc | quote }}
else
  RESTIC_PASSWORD: {{ (randAlphaNum 12) | b64enc | quote }}
{{- end }}
{{- end }}


{{- if and (eq .Values.jobs.init.createUsers.enabled true) (gt (len .Values.jobs.init.createUsers.users) 0) -}}
{{- range $user := .Values.jobs.init.createUsers.users -}}
{{ $key := cat (splitList "." ($user.email | upper | snakecase | replace "@" "_") | first) "pass" | replace " " "_" }}
{{- if $user.password }}
  {{ $key }}: {{ $user.password | b64enc | quote }}
{{- else -}}
  {{ $key }}:
{{- end -}}
{{- end -}}
{{- end -}}


{{- end -}}
